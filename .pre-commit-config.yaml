# Pre-commit configuration for Children of Singularity
# This file configures git hooks that run before commits

repos:
  # Gitleaks - Secret scanning
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.27.2
    hooks:
      - id: gitleaks
        name: gitleaks
        description: Detect hardcoded secrets using Gitleaks on staged files only
        entry: gitleaks protect --config .gitleaks.toml --staged --verbose
        language: golang
        types: [text]
        stages: [commit]

  # Built-in pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
        description: Remove trailing whitespace from all files
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
        name: Fix end of files
        description: Ensure files end with a newline
      - id: check-yaml
        name: Check YAML
        description: Validate YAML files
        files: \.(yml|yaml)$
      - id: check-json
        name: Check JSON
        description: Validate JSON files
        files: \.json$
      - id: check-toml
        name: Check TOML
        description: Validate TOML files
        files: \.toml$
      - id: check-added-large-files
        name: Check for large files
        description: Prevent giant files from being committed
        args: ['--maxkb=1000']
      - id: check-merge-conflict
        name: Check for merge conflicts
        description: Check for files that contain merge conflict strings
      - id: check-executables-have-shebangs
        name: Check executable shebangs
        description: Ensure executables have shebangs
      - id: check-shebang-scripts-are-executable
        name: Check shebang executables
        description: Ensure shebang scripts are executable
      - id: mixed-line-ending
        name: Mixed line ending
        description: Replace mixed line endings with LF
        args: ['--fix=lf']

  # Python specific hooks (for backend)
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        name: Black Python formatter
        description: Format Python code with Black
        files: ^backend/.*\.py$
        language_version: python3

  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        name: Flake8 Python linter
        description: Lint Python code with Flake8
        files: ^backend/.*\.py$
        args: ['--max-line-length=100', '--ignore=E203,W503']

  # Godot specific hooks
  - repo: local
    hooks:
      - id: godot-format
        name: Godot GDScript formatter
        description: Format GDScript files using gdformat
        entry: bash -c 'find . -name "*.gd" -not -path "./backend/*" -not -path "./.godot/*" | head -10'
        language: system
        files: \.gd$
        pass_filenames: false

  # Additional file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-case-conflict
        name: Check case conflicts
        description: Check for files that would conflict in case-insensitive filesystems
      - id: check-symlinks
        name: Check symlinks
        description: Check for broken symlinks

# Global configuration
default_install_hook_types: [pre-commit]
default_stages: [commit]
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
